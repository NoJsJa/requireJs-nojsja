@charset "UTF-8";

// 变量声明 //
$bodyFont: 16px "Lucida Grande", Helvetica, Arial, sans-serif;
$rootFontSize: 16px;
$green_light: #2de275;
$green: #24a955;
$green_dark: #219d4f;
$red:  #d91b09;
$orange: #c85e27;
$orange_light: #fe9746;
$blue: rgba(76, 116, 238, 0.92);
$blue_light: rgba(0, 183, 255, 0.33);
$blue_navy: #1b6b9c;
$blue_dark: #637db5;
$black: #2f2f2f;
$black_dark_light: #3b3d3b;
$black_light: #3b3d3b;
$grey_yellow: #efefef;
$grey_light: #f1f1f1;
$grey: #eaeaea;
$grey_navy_light: #dfdfdf;
$grey_opacity_half: rgba(234, 234, 234, 0.5);
$grey_dark: #737373;
$grey_dark_light: #aaaaaa;
$textShadowColor: #2e3f44;
$boxShadowColor: #4b666e;
$blueGrey: #3f3f3f;

// 宏 //

// 环绕阴影
@mixin boxShadowRound ($value:5px, $color: $boxShadowColor){

    -webkit-box-shadow:  0 0 $value $color;
    -moz-box-shadow:  0 0 $value $color;
    box-shadow:  0 0 $value $color;
}

// 偏移阴影
@mixin boxShadowSide ($value: 5px, $color: $boxShadowColor){

    -webkit-box-shadow:  $value $value 0 $color;
    -moz-box-shadow:  $value $value 0 $color;
    box-shadow:  $value $value 0 $color;
}

// 向下偏移环绕阴影
@mixin boxShadowRoundSide_bottom ($value: 5px, $color: $black_light){
    -webkit-box-shadow:  0 $value $value $color;
    -moz-box-shadow:  0 $value $value $color;
    box-shadow:  0 $value $value $color;
}

// 向右偏移环绕阴影
@mixin boxShadowRoundSide_right ($value: 5px, $color: $black_light) {
    -webkit-box-shadow:  $value 0 $value $color;
    -moz-box-shadow:  $value 0 $value $color;
    box-shadow:  $value 0 $value $color;
}

// 环绕偏移阴影
@mixin boxShadowRoundSide ($value: 5px, $color: $boxShadowColor){

    -webkit-box-shadow:  $value $value $value $color;
    -moz-box-shadow:  $value $value $value $color;
    box-shadow:  $value $value $value $color;
}

// 过度效果
@mixin transition ($attr:all, $time:0.3s, $timeFunction:linear){
    -webkit-transition: $attr $time $timeFunction;
    -moz-transition: $attr $time $timeFunction;
    -ms-transition: $attr $time $timeFunction;
    -o-transition: $attr $time $timeFunction;
    transition: $attr $time $timeFunction;
}

// 变化效果
@mixin transform ($value: scale(1.0)){

    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
    transform: $value;
}

// animation 缩写
//animation: name duration timing-function delay iteration-count direction;

// 自定义动画
@mixin animation($animationName, $animationDuration:2s, $animationTimingFunction: linear,
    $animationDelay:0s, $animationIteration:infinite, $animationDirection: normal,
    $animationFillMode: none){

    -webkit-animation: $animationName $animationDuration
        $animationTimingFunction $animationDelay $animationIteration $animationDirection;
    -o-animation: $animationName $animationDuration
        $animationTimingFunction $animationDelay $animationIteration $animationDirection;
    animation: $animationName $animationDuration
        $animationTimingFunction $animationDelay $animationIteration $animationDirection;

    -webkit-animation-fill-mode: $animationFillMode;
    -moz-animation-fill-mode: $animationFillMode;
    -o-animation-fill-mode: $animationFillMode;
    animation-fill-mode: $animationFillMode;
}

// 呼吸动画
@mixin breathAnimation($time: 2s, $status: infinite){
    -webkit-animation: breath $time $status linear;
    -o-animation: breath $time $status linear;
    animation: breath $time $status linear;

    @keyframes breath {
        0% {
            @include transform(scale(1.0));
        }
        50% {
            @include transform(scale(1.2));
        }
        100% {
            @include transform(scale(1.0));
        }
    }
}


// 自旋转动画
@mixin rotateAnimation($time: 4s, $status: infinite, $deg: 360deg){
    -webkit-animation: rotate $time $status linear;
    -o-animation: rotate $time $status linear;
    animation: rotate $time $status linear;

    @keyframes rotate {
        0% {
            -webkit-transform: translateY(0deg);
            -moz-transform: translateY(0deg);
            -ms-transform: translateY(0deg);
            -o-transform: translateY(0deg);
            transform: translateY(0deg);
        }
        100% {
            -webkit-transform: rotateY($deg);
            -moz-transform: rotateY($deg);
            -ms-transform: rotateY($deg);
            -o-transform: rotateY($deg);
            transform: rotateY($deg);
        }
    }
}


// 彩色动画
@mixin rainBow ($reverse:normal, $border:true){

    @if $reverse != normal {

        @if $border != true {
            @include animation(rainBowFont, 2s, linear, 0s, infinite, reverse, forwards);
        }
        @else {
            @include animation(rainBow, 2s, linear, 0s, infinite, reverse, forwards);
        }
    }

    @else {

        @if $border != true {
            @include animation(rainBowFont, 2s, linear, 0s, infinite, normal, forwards);
        }
        @else {
            @include animation(rainBow, 2s, linear, 0s, infinite, normal, forwards);
        }
    }

    @keyframes rainBow {
        0% {
            color: #009c00;
            border: solid 1px #009c00;
        }
        25% {
            color: #54b7bc;
            border: solid 1px #54b7bc;
        }
        50% {
            color: #755cbc;
            border: solid 1px #755cbc;
        }
        75% {
            color: #d07233;
            border: solid 1px #d07233;
        }
        100% {
            color: #009c00;
            border: solid 1px #009c00;
        }
    }

    @keyframes rainBowFont {
        0% {
            color: #009c00;
        }
        25% {
            color: #54b7bc;
        }
        50% {
            color: #755cbc;
        }
        75% {
            color: #d07233;
        }
        100% {
            color: #009c00;
        }
    }
}

// 文字多层重叠特效
@mixin fontMultiOverlay() {
    text-shadow: 0 0 0 rgb(188,178,188),
    1px 0 0 rgb(173,163,173),
    2px 0 0 rgb(157,147,157),
    3px 0 0 rgb(142,132,142),
    4px 0 0 rgb(126,116,126),
    5px 0 0 rgb(111,101,111),
    6px 0 0 rgb(95,85,95),
    7px 0 0 rgb(79,69,79),
    8px 0 7px rgba(0,0,0,0.35),
    8px 0 1px rgba(0,0,0,0.5),
    0 0 7px rgba(0,0,0,.2);
}

// 行内断字
@mixin wordBreak($breakOption: normal){

    @if $breakOption == break-all {
        -ms-word-wrap: break-word;
        word-wrap:break-word;
        -ms-word-break: $breakOption;
        word-break: $breakOption;
    }
    @else {

        @if $breakOption == keep-all {
            -ms-word-wrap: normal;
            word-wrap: normal;
            -ms-word-break: $breakOption;
            word-break: $breakOption;
        }
        @else {
            -ms-word-wrap: normal;
            word-wrap: normal;
            -ms-word-break: normal;
            word-break: normal;
        }
    }

}

// 函数 //
@function double($v){

    @return $v * 2;
}